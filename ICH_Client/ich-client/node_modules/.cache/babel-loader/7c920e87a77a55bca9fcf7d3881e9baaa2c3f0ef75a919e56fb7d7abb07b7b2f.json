{"ast":null,"code":"import { variables } from \"./Variables\";\nasync function GetAllUsersForAdmin() {\n  const responce = await fetch(variables.API_URL + \"Refugees/GetRefugees\");\n  return responce.json();\n}\n_c = GetAllUsersForAdmin;\nasync function LoginUser(data) {\n  const responce = await fetch(variables.API_URL + \"Refugees/Login\", {\n    method: \"post\",\n    headers: {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      userInit: data.initials,\n      password: data.password\n    })\n  });\n  if (responce.ok) return responce.json();else return responce;\n}\n_c2 = LoginUser;\nasync function RegisterUser(data) {\n  const responce = await fetch(variables.API_URL + \"Refugees/PostRefugee\", {\n    method: \"post\",\n    headers: {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      nameSurname: data.initials,\n      password: data.password,\n      city: data.city\n    })\n  });\n  if (responce.ok) return responce.json();else return responce;\n}\n_c3 = RegisterUser;\nasync function UpdateAssistanceData(data) {\n  const responce = await fetch(variables.API_URL + \"Refugees/ChangeAssistance\", {\n    method: \"put\",\n    headers: {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      assistanse: data.assistance,\n      userId: data.userId\n    })\n  });\n  if (responce.ok) return responce.json();else return responce;\n}\n_c4 = UpdateAssistanceData;\nasync function CheckAccessToAssistance(data) {\n  let token = data.userToken;\n  if (token === null) {\n    return {\n      on: false\n    };\n  }\n  token = token.replace(/\\//g, \"%2F\");\n  token = token.replace(/=/g, \"%3D\");\n  const responce = await fetch(encodeURI(variables.API_URL + \"Refugees/ServiceOn/\" + data.userId.toString() + \"/\" + data.assistanceType + \"/\" + token));\n  return responce.json();\n}\n_c5 = CheckAccessToAssistance;\nexport { GetAllUsersForAdmin, LoginUser, RegisterUser, UpdateAssistanceData, CheckAccessToAssistance };\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"GetAllUsersForAdmin\");\n$RefreshReg$(_c2, \"LoginUser\");\n$RefreshReg$(_c3, \"RegisterUser\");\n$RefreshReg$(_c4, \"UpdateAssistanceData\");\n$RefreshReg$(_c5, \"CheckAccessToAssistance\");","map":{"version":3,"names":["variables","GetAllUsersForAdmin","responce","fetch","API_URL","json","LoginUser","data","method","headers","body","JSON","stringify","userInit","initials","password","ok","RegisterUser","nameSurname","city","UpdateAssistanceData","assistanse","assistance","userId","CheckAccessToAssistance","token","userToken","on","replace","encodeURI","toString","assistanceType"],"sources":["C:/IOT/information-communication-hub-main/ICH_Client/ich-client/src/ServerApi.js"],"sourcesContent":["import { variables } from \"./Variables\";\n\nasync function GetAllUsersForAdmin(){\n    const responce = await fetch(variables.API_URL + \"Refugees/GetRefugees\")\n    \n    return responce.json()\n    \n}\n\nasync function LoginUser(data){\n    const responce = await fetch( variables.API_URL + \"Refugees/Login\", {\n        method: \"post\",\n        headers: {\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            userInit: data.initials,\n            password: data.password\n        })\n    } )\n    if (responce.ok)\n        return responce.json();\n    else\n        return responce\n}\n\n\nasync function RegisterUser(data){\n    const responce = await fetch( variables.API_URL + \"Refugees/PostRefugee\", {\n        method: \"post\",\n        headers: {\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            nameSurname: data.initials,\n            password: data.password,\n            city: data.city,\n        })\n    } )\n    if (responce.ok)\n        return responce.json();\n    else\n        return responce\n}\n\nasync function UpdateAssistanceData(data){\n    const responce = await fetch( variables.API_URL + \"Refugees/ChangeAssistance\", {\n        method: \"put\",\n        headers: {\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            assistanse: data.assistance, \n            userId: data.userId\n        })\n    } )\n    if (responce.ok)\n        return responce.json();\n    else\n        return responce\n}\n\nasync function CheckAccessToAssistance(data){\n    let token = data.userToken\n    if(token === null) {\n        return {\n            on: false\n        }\n    }\n\n    token = token.replace(/\\//g, \"%2F\")\n    token = token.replace(/=/g, \"%3D\")\n\n    const responce = await fetch( encodeURI(variables.API_URL + \n        \"Refugees/ServiceOn/\" + data.userId.toString() + \"/\" + \n        data.assistanceType + \"/\" + token))\n\n    return responce.json()\n}\n\nexport{\n    GetAllUsersForAdmin,\n    LoginUser,\n    RegisterUser,\n    UpdateAssistanceData,\n    CheckAccessToAssistance,\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}