{"ast":null,"code":"var _jsxFileName = \"C:\\\\IOT\\\\ich\\\\Information-communication-hub\\\\information-communication-hub-main\\\\ICH_Client\\\\ich-client\\\\src\\\\pages\\\\Account.js\";\nimport React, { Component } from \"react\";\nimport { AssistanceView } from \"../components/AssistanceView\";\nimport { RequestsView } from \"../components/RequestsView\";\nimport { PersonalInfoView } from \"../components/PersonalInfoView\";\nimport { GetAllUsersForAdmin, UpdateAssistanceData } from \"../ServerApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Account extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      assistanceTypes: {\n        legal: props.hasLegal,\n        medical: false,\n        social: false,\n        employment: false\n      },\n      currentUserId: this.props.userId,\n      selectedOption: props.isAdmin ? 1 : 2,\n      requests: []\n    };\n    this.onUpdateRequestSelected = this.onUpdateRequestSelected.bind(this);\n    this.onUpdateAssistanceSelected = this.onUpdateAssistanceSelected.bind(this);\n    this.onBackSelected = this.onBackSelected.bind(this);\n  }\n  fetchUserAssistanceData(userId) {\n    //implement GET request to server\n  }\n  async fetchAllUsersDataList() {\n    let users = await GetAllUsersForAdmin();\n    console.log(users);\n    let requests = [];\n    users.forEach(user => {\n      requests.push({\n        initials: user.refugee.nameSurname,\n        userId: user.refugee.id,\n        assistance: {\n          legal: user.assistanceData.legal,\n          medical: user.assistanceData.medical,\n          social: user.assistanceData.social,\n          employment: user.assistanceData.employment\n        }\n      });\n    });\n    this.setState({\n      requests: requests\n    });\n  }\n  onUpdateRequestSelected(request) {\n    this.setState({\n      selectedOption: 2,\n      assistanceTypes: request.assistance,\n      currentUserId: request.userId\n    });\n  }\n  async onUpdateAssistanceSelected(data) {\n    data.userId = this.state.currentUserId;\n    let responce = await UpdateAssistanceData(data);\n    if (responce.status === 400) {\n      alert(\"Failed to change assistance\");\n      return false;\n    }\n    //else if (responce.status !== undefined) {\n    //alert(\"Failed to change assistance. Server error\")\n    //  return false\n    //  } \n    else {\n      alert(\"Types of assistance were successfully changed\");\n      if (this.props.isAdmin) {\n        this.setState({\n          selectedOption: 1\n        });\n      } else {\n        this.props.assistanceUpdated(responce);\n        this.setState({\n          assistanceTypes: data.assistance\n        });\n      }\n    }\n  }\n  onBackSelected() {\n    if (this.state.selectedOption === 2 && this.props.isAdmin) {\n      this.setState({\n        selectedOption: 1\n      });\n    }\n  }\n  componentDidMount() {\n    if (this.props.isAdmin) {\n      this.fetchAllUsersDataList();\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"text-left\",\n        children: \"Home - My Account - Update \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container rounded App-form \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3 pt-3 pb-3\",\n            children: /*#__PURE__*/_jsxDEV(PersonalInfoView, {\n              userInfo: this.props.userInfo,\n              isAdmin: this.props.isAdmin,\n              selectedOption: this.state.selectedOption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-9 pt-3 pb-3\",\n            children: /*#__PURE__*/_jsxDEV(OptionsView, {\n              isAdmin: this.props.isAdmin,\n              requests: this.state.requests,\n              assistanceTypes: this.state.assistanceTypes,\n              selectedOption: this.state.selectedOption,\n              onUpdateRequestSelected: this.onUpdateRequestSelected,\n              onBackSelected: this.onBackSelected,\n              onUpdateAssistanceSelected: this.onUpdateAssistanceSelected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this);\n  }\n}\nfunction OptionsView(props) {\n  if (props.isAdmin && props.selectedOption === 1) {\n    return /*#__PURE__*/_jsxDEV(RequestsView, {\n      requests: props.requests,\n      onUpdateRequestSelected: props.onUpdateRequestSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(AssistanceView, {\n      assistanceTypes: props.assistanceTypes,\n      onBackSelected: props.onBackSelected,\n      onUpdateAssistanceSelected: props.onUpdateAssistanceSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this);\n  }\n}\n_c = OptionsView;\nvar _c;\n$RefreshReg$(_c, \"OptionsView\");","map":{"version":3,"names":["React","Component","AssistanceView","RequestsView","PersonalInfoView","GetAllUsersForAdmin","UpdateAssistanceData","Account","constructor","props","state","assistanceTypes","legal","hasLegal","medical","social","employment","currentUserId","userId","selectedOption","isAdmin","requests","onUpdateRequestSelected","bind","onUpdateAssistanceSelected","onBackSelected","fetchUserAssistanceData","fetchAllUsersDataList","users","console","log","forEach","user","push","initials","refugee","nameSurname","id","assistance","assistanceData","setState","request","data","responce","status","alert","assistanceUpdated","componentDidMount","render","userInfo","OptionsView"],"sources":["C:/IOT/ich/Information-communication-hub/information-communication-hub-main/ICH_Client/ich-client/src/pages/Account.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { AssistanceView } from \"../components/AssistanceView\";\nimport { RequestsView } from \"../components/RequestsView\";\nimport { PersonalInfoView } from \"../components/PersonalInfoView\";\nimport { GetAllUsersForAdmin, UpdateAssistanceData } from \"../ServerApi\";\n\n\n\nexport class Account extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            assistanceTypes: {\n                legal: props.hasLegal,\n                medical: false,\n                social: false,\n                employment: false\n            },\n            currentUserId: this.props.userId,\n            selectedOption: (props.isAdmin ? 1 : 2),\n            requests: [],\n        }\n\n        this.onUpdateRequestSelected = this.onUpdateRequestSelected.bind(this)\n        this.onUpdateAssistanceSelected = this.onUpdateAssistanceSelected.bind(this)\n        this.onBackSelected = this.onBackSelected.bind(this)\n    }\n\n    fetchUserAssistanceData(userId) {\n        //implement GET request to server\n    }\n\n    async fetchAllUsersDataList() {\n        let users = await GetAllUsersForAdmin()\n\n        console.log(users)\n\n        let requests = []\n\n        users.forEach(user => {\n            requests.push({\n                initials: user.refugee.nameSurname,\n                userId: user.refugee.id,\n                assistance: {\n                    legal: user.assistanceData.legal,\n                    medical: user.assistanceData.medical,\n                    social: user.assistanceData.social,\n                    employment: user.assistanceData.employment\n                }\n            })\n        });\n\n        this.setState({\n            requests: requests\n        })\n\n\n    }\n\n    onUpdateRequestSelected(request) {\n        this.setState({\n            selectedOption: 2,\n            assistanceTypes: request.assistance,\n            currentUserId: request.userId\n        })\n    }\n\n    async onUpdateAssistanceSelected(data) {\n        data.userId = this.state.currentUserId\n\n        let responce = await UpdateAssistanceData(data);\n\n        if (responce.status === 400) {\n            alert(\"Failed to change assistance\")\n            return false\n        }\n        //else if (responce.status !== undefined) {\n            //alert(\"Failed to change assistance. Server error\")\n          //  return false\n      //  } \n        else {\n            alert(\"Types of assistance were successfully changed\")\n            if (this.props.isAdmin) {\n                this.setState({\n                    selectedOption: 1\n                })\n            } else {\n                this.props.assistanceUpdated(responce)\n                this.setState({\n                    assistanceTypes: data.assistance\n                })\n            }\n        }\n    }\n\n    onBackSelected() {\n        if (this.state.selectedOption === 2 && this.props.isAdmin) {\n            this.setState({\n                selectedOption: 1\n            })\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.isAdmin) {\n            this.fetchAllUsersDataList()\n        }\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h6 className=\"text-left\">Home - My Account - Update </h6>\n                <div className=\"container rounded App-form \">\n                    <div className=\"row\">\n                        <div className=\"col-3 pt-3 pb-3\">\n                            <PersonalInfoView\n                                userInfo={this.props.userInfo}\n                                isAdmin={this.props.isAdmin}\n                                selectedOption={this.state.selectedOption}\n                            />\n                        </div>\n                        <div className=\"col-9 pt-3 pb-3\">\n                            <OptionsView\n                                isAdmin={this.props.isAdmin}\n                                requests={this.state.requests}\n                                assistanceTypes={this.state.assistanceTypes}\n                                selectedOption={this.state.selectedOption}\n                                onUpdateRequestSelected={this.onUpdateRequestSelected}\n                                onBackSelected={this.onBackSelected}\n                                onUpdateAssistanceSelected={this.onUpdateAssistanceSelected}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction OptionsView(props) {\n    if (props.isAdmin && props.selectedOption === 1) {\n        return (\n            <RequestsView\n                requests={props.requests}\n                onUpdateRequestSelected={props.onUpdateRequestSelected}\n            />\n        )\n    } else {\n        return (\n            <AssistanceView\n                assistanceTypes={props.assistanceTypes}\n                onBackSelected={props.onBackSelected}\n                onUpdateAssistanceSelected={props.onUpdateAssistanceSelected}\n            />\n        )\n    }\n\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}